/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from 'kysely';

export type Generated<T> =
  T extends ColumnType<infer S, infer I, infer U>
    ? ColumnType<S, I | undefined, U>
    : ColumnType<T, T | undefined, T>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export type UserRole = 'admin' | 'manager' | 'user';

export interface Organizations {
  organization_id: Generated<string>;
}

export interface OrganizationUsers {
  joined_at: Generated<Timestamp | null>;
  organization_id: string;
  user_id: string;
}

export interface Users {
  kind: 'users';
  created_at: Generated<Timestamp | null>;
  email: string;
  password: string;
  role: Generated<UserRole>;
  user_id: Generated<string>;
}

export interface DB {
  organization_users: OrganizationUsers;
  organizations: Organizations;
  users: Users;
}
